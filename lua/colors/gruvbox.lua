local c = require("colors.themes.gruvbox")
local hl = require("utils").highlight

hl("Normal", { fg=c.fg1, bg=c.bg0 })
hl("CursorLine", { bg=c.bg1 })
hl("CursorColumn", { bg=c.bg1 })
hl("TabLineFill", { fg=c.bg4, bg=c.bg1, gui="inverse" })
hl("TabLineSel", { fg=c.green, bg=c.bg1, gui="inverse" })
hl("TabLine", { fg=c.bg4, bg=c.bg1, gui="inverse" })
hl("MatchParen", { bg=c.bg3, gui="bold" })
hl("ColorColumn",  { bg=c.bg1 })
hl('Conceal', { gui='underline', bg=c.none })
hl('CursorLineNr', { fg=c.yellow, bg=c.bg1 })
hl("NonText", { fg=c.bg0, bg=c.bg0 }) -- hude ~
hl("SpecialKey", { bg=c.bg2 })
hl('Visual', { bg=c.bg3, gui="inverse" })
hl('VisualNOS', { bg=c.bg3, gui="inverse" })
hl('Search', { fg=c.yellow, bg=c.bg0, gui="inverse" })
hl('IncSearch', { fg=c.orange, bg=c.bg0, gui="inverse " })
hl('Underlined', { fg=c.blue, gui="underline" })
hl('StatusLine', { fg=c.fg1, bg=c.bg2 })
hl('StatusLineNC', { fg=c.fg4, bg=c.bg1 })
hl('VertSplit', { fg=c.bg0, bg=c.bg3 })
hl('WildMenu', { fg=c.blue, bg=c.bg2, gui="bold" })
hl("Directory", { fg=c.green, gui="bold" })
hl("Title", { fg=c.green, gui="bold" })
hl('ErrorMsg', { fg=c.bg0, bg=c.red, gui="bold" })
hl("MoreMsg", { fg=c.yellow, gui="bold" })
hl("ModeMsg", { fg=c.yellow, gui="bold" })
hl("Question", { fg=c.orange, gui="bold" })
hl("WarningMsg", { fg=c.red, gui="bold" })
hl('LineNr', { fg=c.bg4 })
hl('SignColumn', { bg=c.bg0 })
hl('Folded', { fg=c.gray, bg=c.bg1, gui="italic" })
hl('FoldColumn', { fg=c.gray, bg=c.bg1 })
hl('Special', { fg=c.orange })
hl('Comment', { fg=c.gray })
hl('Todo', { fg=c.blue, bg=c.bg0, gui="bold" })
hl('Error', { bg=c.red })
hl("Statement", { fg=c.red })
hl("Conditional", { fg=c.red })
hl("Repeat", { fg=c.red })
hl("Label", { fg=c.red })
hl("Exception", { fg=c.red })
hl("Operator", { fg=c.red })
hl("Keyword", { fg=c.red })
hl("Identifier", { fg=c.red })
hl("Function", { fg=c.green })
hl("PreProc", { fg=c.aqua })
hl("Include", { fg=c.aqua })
hl("Define", { fg=c.aqua })
hl("Macro", { fg=c.aqua })
hl("PreCondit", { fg=c.aqua })
hl("Constant", { fg=c.purple })
hl("Character", { fg=c.purple })
hl('String', { fg=c.green })
hl("Boolean", { fg=c.purple })
hl("Number", { fg=c.purple })
hl("Float", { fg=c.purple })
hl("Type", { fg=c.yellow })
hl("StorageClass", { fg=c.orange })
hl("Structure", { fg=c.aqua })
hl("Typedef", { fg=c.yellow })
hl('Pmenu', { fg=c.fg1, bg=c.bg2 })
hl('PmenuSel', { fg=c.bg2, bg=c.blue, gui="bold" })
hl('PmenuSbar', { bg=c.bg2})
hl('PmenuThumb', { bg=c.bg4 })

-- Diff Highlighting
hl('DiffDelete', { fg=c.bg0, bg=c.red })
hl('DiffAdd', { fg=c.bg0, bg=c.green })
hl('DiffChange', { fg=c.bg0, bg=c.aqua })
hl('DiffText', { fg=c.bg0, bg=c.yellow })

-- Spelling Highlighting
hl('SpellCap', { gui="undercurl", guisp=c.red })
-- Not recognized word
hl('SpellBad', { gui="undercurl", guisp=c.blue })
-- Wrong spelling for selected region
hl('SpellLocal', { gui="undercurl", guisp=c.aqua})
-- Rare word
hl('SpellRare', { gui="undercurl", guisp=c.purple })

--
-- Plugin
--

-- nvim-treesitter

hl('TSNone', {fg=c.none})
hl('TSError', {fg=c.red})
hl('TSTitle', {fg=c.green, gui='bold'})
hl('TSLiteral', {fg=c.green})
hl('TSURI', {fg=c.blue, gui='underline'})
hl('TSVariable', {fg=c.fg1})
hl('TSPunctDelimiter', {fg=c.orange})
hl('TSPunctBracket', {fg=c.orange})
hl('TSPunctSpecial', {fg=c.orange})
hl('TSConstant', {fg=c.purple})
hl('TSConstBuiltin', {fg=c.orange})
hl('TSConstMacro', {fg=c.aqua})
hl('TSString', {fg=c.green})
hl('TSStringRegex', {fg=c.green})
hl('TSStringEscape', {fg=c.red})
hl('TSCharacter', {fg=c.purple})
hl('TSNumber', {fg=c.purple})
hl('TSBoolean', {fg=c.purple})
hl('TSFloat', {fg=c.purple})
hl('TSFunction', {fg=c.green})
hl('TSFuncBuiltin', {fg=c.orange})
hl('TSFuncMacro', {fg=c.aqua})
hl('TSParameter', {fg=c.red})
hl('TSParameterReference', {fg=c.red})
hl('TSMethod', {fg=c.green})
hl('TSField', {fg=c.red})
hl('TSProperty', {fg=c.red})
hl('TSConstructor', {fg=c.orange})
hl('TSAnnotation', {fg=c.aqua})
hl('TSAttribute', {fg=c.aqua})
hl('TSNamespace', {fg=c.aqua})
hl('TSConditional', {fg=c.red})
hl('TSRepeat', {fg=c.red})
hl('TSLabel', {fg=c.red})
hl('TSOperator', {fg=c.red})
hl('TSKeyword', {fg=c.red})
hl('TSKeywordFunction', {fg=c.red})
hl('TSKeywordOperator', {fg=c.red})
hl('TSException', {fg=c.red})
hl('TSType', {fg=c.yellow})
hl('TSTypeBuiltin', {fg=c.yellow})
hl('TSInclude', {fg=c.aqua})
hl('TSVariableBuiltin', {fg=c.orange})
hl('TSText', {fg=c.none})
hl('TSStrong', {gui='bold'})
hl('TSEmphasis', {gui='italic'})
hl('TSUnderline', {gui='underline'})
hl('TSComment', {fg=c.gray})
hl('TSStructure', {fg=c.orange})
hl('TSTag', {fg=c.orange})
hl('TSTagDelimiter', {fg=c.green})

--
-- Specified Filetype
--
hl("pythonBuiltin", { fg=c.orange })
hl("pythonBuiltinObj", { fg=c.orange })
hl("pythonBuiltinFunc", { fg=c.orange })
hl("pythonFunction", { fg=c.aqua })
hl("pythonDecorator", { fg=c.red })
hl("pythonInclude", { fg=c.blue })
hl("pythonImport", { fg=c.blue })
hl("pythonRun", { fg=c.blue })
hl("pythonCoding", { fg=c.blue })
hl("pythonOperator", { fg=c.red })
hl("pythonException", { fg=c.red })
hl("pythonExceptions",  { fg=c.purple })
hl("pythonBoolean",  { fg=c.purple })
hl("pythonDot",  { fg=c.fg3 })
hl("pythonConditional", { fg=c.red })
hl("pythonRepeat", { fg=c.red })
hl("pythonDottedName", { fg=c.green, gui='bold' })

-- Markdown
hl('markdownItalic', { fg=c.fg3, gui="italic"})
hl('markdownLinkText', { fg=c.gray, gui="underline" })
hl("markdownH1", { fg=c.green, gui="bold" })
hl("markdownH2", { fg=c.green, gui="bold" })
hl("markdownH3", { fg=c.yellow, gui="bold" })
hl("markdownH4", { fg=c.yellow, gui="bold" })
hl("markdownH5", { fg=c.yellow })
hl("markdownH6", { fg=c.yellow })

hl("markdownCode", { fg=c.aqua })
hl("markdownCodeBlock", { fg=c.aqua })
hl("markdownCodeDelimiter", { fg=c.aqua })

hl("markdownBlockquote", { fg=c.gray })
hl("markdownListMarker", { fg=c.gray })
hl("markdownOrderedListMarker", { fg=c.gray })
hl("markdownRule", { fg=c.gray })
hl("markdownHeadingRule", { fg=c.gray })

hl("markdownUrlDelimiter",  { fg=c.fg3 })
hl("markdownLinkDelimiter",  { fg=c.fg3 })
hl("markdownLinkTextDelimiter",  { fg=c.fg3 })

hl("markdownHeadingDelimiter", { fg=c.orange })
hl("markdownUrl",  { fg=c.purple })
hl("markdownUrlTitleDelimiter", { fg=c.green })

hl('markdownIdDeclaration', { fg=c.gray, gui="underline" })

-- Ruby
hl("rubyStringDelimiter", { fg=c.green })
hl("rubyInterpolationDelimiter", { fg=c.aqua })

-- Vim
hl('vimCommentTitle', { fg=c.fg4, gui="bold,italic" })
hl("vimNotation", { fg=c.orange })
hl("vimBracket", { fg=c.orange })
hl("vimMapModKey", { fg=c.orange })
hl("vimFuncSID",  { fg=c.fg3 })
hl("vimSetSep",  { fg=c.fg3 })
hl("vimSep",  { fg=c.fg3 })
hl("vimContinue",  { fg=c.fg3 })
